server:
  port: 8999

netty:
  websocket:
    port: 9000

spring:
  datasource:
    dynamic:
      primary: mysql_satellite
      strict: false
      datasource:
        mysql_satellite:
          url: jdbc:mysql://192.168.1.110:3306/satellite
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
          hikari:
            connection-init-sql: SET SESSION group_concat_max_len = 18446744073709551615
        mysql_tile:
          url: jdbc:mysql://192.168.1.110:3306/tile
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
        # PostgreSQL配置 - 请根据实际情况配置
        # pg_space:
        #   url: jdbc:postgresql://your-postgres-host:5432/gis_db
        #   username: postgres
        #   password: your-password
        #   driver-class-name: org.postgresql.Driver
  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB
  data:
    redis:
      host: 114.55.142.175
      port: 30379
      database: 0
    # MongoDB配置 - 请根据实际情况配置
    # mongodb:
    #   uri: mongodb://username:password@your-mongo-host:27017/database
  # Elasticsearch配置 - 请根据实际情况配置
  # elasticsearch:
  #   uris: http://your-es-host:9200

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: nnu.mnr.satellite.model.po
  type-handlers-package: nnu.mnr.satellite.utils.typeHandler
  # 开启SQL日志输出（调试时可以启用）
  configuration:
     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

minio:
  access-key: minioadmin
  secret-key: minioadmin
  url: http://192.168.1.110:30900
  # 备用地址: http://223.2.36.238:30901

# Docker配置

#docker:
#  defaultServer:
#    port: 2375
#    host: "223.2.35.153"
#    username: "root"
#    password: "dky.njnu.edu.cn"
#  localPath: D:/satellite/modelDockerVolume/
#  serverDir: /home/satellite/
#  workDir: /usr/local/coding/

docker:
  # 执行模式：local（本地Docker）或 remote（远程服务器）
  mode: "local"
  # 本地Docker配置
  local:
    enabled: true
    localPath: D:/satellite-projects/
    workDir: /workspace/
  # 远程服务器配置（保留原有配置）
  defaultServer:
    port: 2375
    host: "localhost"
    # 本地Docker不需要SSH，但JSchConnectionManager需要这些配置
    username: "localhost"
    password: "localhost"
  localPath: D:/satellite-projects/
  serverDir: /workspace/
  workDir: /workspace/

# # 简化Docker配置 - 全部使用本地路径
# docker:
#   defaultServer:
#     port: 2375
#     host: "223.2.35.153"
#     username: "root"
#     password: "dky.njnu.edu.cn"
#   localPath: D:/satellite/modelDockerVolume/
#   serverDir: /home/satellite/
#   workDir: /usr/local/coding/

# 添加默认的模型服务器配置
modelServer:
  address: http://localhost:5001/
  apis:
    status: /v0/task/status
    result: /v0/task/result
    merge: /v0/tif/merge_v2
    spectrum: /v0/tif/get_spectral_profile
    noCloud: /v0/tif/calc_no_cloud
    noCloudAdaptive: /v0/tif/calc_no_cloud_adaptive
    rasterPoint: /v0/tif/calc_raster_point
    rasterLine: /v0/tif/calc_raster_line
    ndvi: /v0/tif/calc_NDVI
  interval:
    status: 2

# 瓦片服务配置 - 如果没有瓦片服务，请提供默认配置
tiler:
  end-point: http://192.168.1.111:8000

# 卫星配置文件路径 - 请根据实际情况配置
satelliteConfig:
  path: D:/satellite/band_config.json

# Ray优化配置
ray:
  optimization:
    enabled: true                   # 是否启用Ray优化
    cpuCount: 4                     # Ray使用的CPU数量
    memoryMB: 2048                  # Ray使用的内存量(MB)
    timeout: 60                     # 优化超时时间(秒)
    fallbackOnError: true           # 优化失败时是否回退到原始代码
    analysisMode: "auto"            # 分析模式：auto/conservative/aggressive
    logLevel: "INFO"                # 日志级别
    tempDir: "/tmp/ray"             # Ray临时目录
    enableOptimizationReport: true   # 是否生成优化报告
    maxRetries: 2                   # 最大重试次数
    enableCaching: true             # 是否启用优化缓存
    cacheTtlMinutes: 60             # 缓存过期时间(分钟)
    # 本地Ray优化模块路径
    modulePath: D:/satellite-analysis/pything/ray_optimization/
    # Docker运行时的额外参数（用于解决Ray的shm警告）
    dockerRunOptions: "--shm-size=1.44gb"
    # Ray Dashboard配置
    dashboard:
      enabled: true                 # 是否启用Ray Dashboard访问
      port: 8265                    # Ray Dashboard端口
      hostPort: 8265                # 宿主机映射端口
