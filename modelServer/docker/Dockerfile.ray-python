# 支持Ray的Python环境Docker镜像
FROM python:3.9-slim

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV TZ=Asia/Shanghai

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    wget \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /usr/local/coding

# 升级pip
RUN pip install --upgrade pip

# 安装Ray和常用科学计算库
RUN pip install --no-cache-dir \
    ray[default]==2.9.0 \
    numpy==1.24.3 \
    pandas==2.0.3 \
    scipy==1.11.1 \
    scikit-learn==1.3.0 \
    matplotlib==3.7.2 \
    seaborn==0.12.2 \
    jupyter==1.0.0 \
    rasterio==1.3.8 \
    geopandas==0.13.2 \
    opencv-python==4.8.0.76 \
    Pillow==10.0.0 \
    scikit-image==0.21.0 \
    xarray==2023.7.0 \
    dask==2023.7.1 \
    joblib==1.3.2 \
    requests==2.31.0 \
    tqdm==4.66.1

# 安装遥感和地理信息处理库
RUN pip install --no-cache-dir \
    earthpy==0.9.4 \
    folium==0.14.0 \
    contextily==1.3.0 \
    rasterstats==0.19.0 \
    sentinelsat==1.2.1

# 复制优化器代码
COPY modelServer/dataProcessing/service/ /app/service/

# 创建必要的目录
RUN mkdir -p /usr/local/coding/data && \
    mkdir -p /usr/local/coding/output && \
    mkdir -p /usr/local/coding/temp && \
    chmod -R 777 /usr/local/coding

# 创建启动脚本
RUN echo '#!/bin/bash\n\
echo "Ray优化Python环境已启动"\n\
echo "Ray版本: $(python -c \"import ray; print(ray.__version__)\")"\n\
echo "工作目录: $(pwd)"\n\
echo "Python路径: $(which python)"\n\
exec "$@"' > /usr/local/bin/entrypoint.sh && \
    chmod +x /usr/local/bin/entrypoint.sh

# 创建监控脚本
COPY modelServer/docker/scripts/watcher.py /usr/local/coding/watcher.py

# 暴露端口
EXPOSE 8265 10001 6379

# 设置入口点
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["/bin/bash"] 